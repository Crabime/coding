<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.crabime.practice.xml.dao.EducationDao">

    <resultMap id="eduMap" type="cn.crabime.practice.mybatis.Education" autoMapping="true" />
    <cache size="10" />

    <select id="findById" resultType="cn.crabime.practice.mybatis.Education" resultMap="eduMap">
        select * from education where id = #{id}
    </select>

    <insert id="insertEducation" parameterType="education" keyProperty="id" useGeneratedKeys="true">
        insert into education (family_id, type, charge, username) values (#{familyId}, #{type}, #{charge}, #{username})
    </insert>

    <insert id="insertCustomizeEducation" keyColumn="id,username" keyProperty="education.id,education.username" useGeneratedKeys="true">
        insert into education (family_id, type, charge, username) values (#{education.familyId}, #{education.type}, #{education.charge}, #{name})
    </insert>

    <insert id="batchInsertEducation" parameterType="cn.crabime.practice.mybatis.Education" useGeneratedKeys="true" keyProperty="id">
        insert into education (family_id, type, charge, username) values
        <foreach collection="list" item="item" separator=",">
            (#{item.familyId}, #{item.type}, #{item.charge}, #{item.username})
        </foreach>
    </insert>

    <select id="findByEdu" parameterType="cn.crabime.practice.xml.vo.EducationRequest" resultMap="eduMap">
        select * from education
        <where>
            <if test="req.type != null and req.type in {'Biology', 'Chinese'}">
                charge <![CDATA[<=]]> #{req.level} and type = #{req.type}
            </if>
        </where>
    </select>

    <update id="truncateEducation">
        truncate table education
    </update>
</mapper>